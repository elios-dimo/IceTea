import { createSlice } from '@reduxjs/toolkit';

// Create a slice of the Redux store called "cart"
const cartSlice = createSlice({
  name: 'cart',
  initialState: {
    items: [], // Initial state with an empty array for cart items
  },
  reducers: {
    // Reducer function to add an item to the cart or increment its quantity if it already exists
    addToCart: (state, action) => {
      // The item to be added to the cart action has types and payloads action.payload returns an item object with image,title,price properties in our case
      const newItem = action.payload;
      const existingItem = state.items.find((item) => item.id === newItem.id);

      if (existingItem) {
        existingItem.quantity += 1; // Increment the quantity if the item already exists in the cart
      } else {
        // Add the new item to the cart with an initial quantity of 1
        state.items.push({ ...newItem, quantity: 1 });
      }
    },

    // Reducer function to increment the quantity of an item in the cart
    increment: (state, action) => {
      const { id } = action.payload; // The ID of the item to be incremented
      const existingItem = state.items.find((item) => item.id === id);
      if (existingItem) {
        existingItem.quantity += 1; // Increment the quantity of the item
      }
    },

    // Reducer function to decrement the quantity of an item in the cart
    decrement: (state, action) => {
      const { id } = action.payload; // The ID of the item to be decremented
      const existingItem = state.items.find((item) => item.id === id);
      if (existingItem && existingItem.quantity > 0) {
        existingItem.quantity -= 1; // Decrement the quantity of the item if it is greater than 0
      }
    },

    // Reducer function to clear the cart by resetting the items array to an empty array
    clearCart: (state) => {
      state.items = [];
    },
  },
});

// Selector function to calculate the total quantity of all items in the cart
export const selectTotalQuantity = (state) => {
  return state.cart.items.reduce((total, item) => total + item.quantity, 0);
};

// Export the action creators generated by createSlice
export const { addToCart, increment, decrement, clearCart } = cartSlice.actions;

// Export the cartReducer, which is the default export of the slice
export default cartSlice.reducer;
